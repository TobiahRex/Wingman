"""Generated message classes for containeranalysis version v1alpha1.

An API to insert and retrieve annotations on container resources.
"""
# NOTE: This file is autogenerated and should not be edited by hand.

from apitools.base.protorpclite import messages as _messages
from apitools.base.py import encoding


package = 'containeranalysis'


class Artifact(_messages.Message):
  """Artifact destribes a build product.

  Fields:
    checksum: Hash or checksum value of a binary, or Docker Registry 2.0
      digest of a container.
    id: Artifact ID, if any; for container images, this will be a URL by
      digest like gcr.io/projectID/imagename@sha256:123456
    name: Name of the artifact. This may be the path to a binary or jar file,
      or in the case of a container build, the name used to push the container
      image to Google Container Registry, as presented to `docker push`.
  """

  checksum = _messages.StringField(1)
  id = _messages.StringField(2)
  name = _messages.StringField(3)


class AuditConfig(_messages.Message):
  """Enables "data access" audit logging for a service and specifies a list of
  members that are log-exempted.

  Fields:
    exemptedMembers: Specifies the identities that are exempted from "data
      access" audit logging for the `service` specified above. Follows the
      same format of Binding.members.
    service: Specifies a service that will be enabled for "data access" audit
      logging. For example, `resourcemanager`, `storage`, `compute`.
      `allServices` is a special value that covers all services.
  """

  exemptedMembers = _messages.StringField(1, repeated=True)
  service = _messages.StringField(2)


class Binding(_messages.Message):
  """Associates `members` with a `role`.

  Fields:
    members: Specifies the identities requesting access for a Cloud Platform
      resource. `members` can have the following values:  * `allUsers`: A
      special identifier that represents anyone who is    on the internet;
      with or without a Google account.  * `allAuthenticatedUsers`: A special
      identifier that represents anyone    who is authenticated with a Google
      account or a service account.  * `user:{emailid}`: An email address that
      represents a specific Google    account. For example, `alice@gmail.com`
      or `joe@example.com`.  * `serviceAccount:{emailid}`: An email address
      that represents a service    account. For example, `my-other-
      app@appspot.gserviceaccount.com`.  * `group:{emailid}`: An email address
      that represents a Google group.    For example, `admins@example.com`.  *
      `domain:{domain}`: A Google Apps domain name that represents all the
      users of that domain. For example, `google.com` or `example.com`.
    role: Role that is assigned to `members`. For example, `roles/viewer`,
      `roles/editor`, or `roles/owner`. Required
  """

  members = _messages.StringField(1, repeated=True)
  role = _messages.StringField(2)


class BuildDetails(_messages.Message):
  """Message encapsulating build provenance details

  Fields:
    provenance: The actual provenance
    provenanceBytes: Serialized json representation of the provenance, used in
      generating the BuildSignature in the corresponding Result. After
      verifying the signature, provenance_bytes can be unmarshalled and
      compared to the provenance to confirm that it is unchanged. String is a
      base64-encoded representation of the provenance bytes used in the
      signature.  We store the serialized form both to avoid ambiguity in how
      the Provenance is marshalled to json as well to prevent
      incompatibilities with future changes.
  """

  provenance = _messages.MessageField('BuildProvenance', 1)
  provenanceBytes = _messages.StringField(2)


class BuildProvenance(_messages.Message):
  """Provenance of a build. Contains all information needed to verify the full
  details about the build from source to completion.

  Messages:
    BuildOptionsValue: Special options applied to this build. This is a catch-
      all field where build providers can enter any desired additional
      details.

  Fields:
    buildOptions: Special options applied to this build. This is a catch-all
      field where build providers can enter any desired additional details.
    builderVersion: Version string of the builder at the time this build was
      executed.
    builtArtifacts: Output of the build.
    commands: Commands requested by the build.
    createTime: Time at which the build was created.
    creator: E-mail address of the user who initiated this build. Note that
      this was the user's e-mail address at the time the build was initiated;
      this address may not represent the same end-user for all time.
    finishTime: Time at whihc execution of the build was finished.
    id: Unique identifier of the build.
    logsBucket: Google Cloud Storage bucket where logs were written.
    projectId: ID of the project.
    sourceProvenance: Details of the Source input to the build.
    startTime: Time at which execution of the build was started.
    triggerId: Trigger identifier if the build was triggered automatically;
      empty if not.
  """

  @encoding.MapUnrecognizedFields('additionalProperties')
  class BuildOptionsValue(_messages.Message):
    """Special options applied to this build. This is a catch-all field where
    build providers can enter any desired additional details.

    Messages:
      AdditionalProperty: An additional property for a BuildOptionsValue
        object.

    Fields:
      additionalProperties: Additional properties of type BuildOptionsValue
    """

    class AdditionalProperty(_messages.Message):
      """An additional property for a BuildOptionsValue object.

      Fields:
        key: Name of the additional property.
        value: A string attribute.
      """

      key = _messages.StringField(1)
      value = _messages.StringField(2)

    additionalProperties = _messages.MessageField('AdditionalProperty', 1, repeated=True)

  buildOptions = _messages.MessageField('BuildOptionsValue', 1)
  builderVersion = _messages.StringField(2)
  builtArtifacts = _messages.MessageField('Artifact', 3, repeated=True)
  commands = _messages.MessageField('Command', 4, repeated=True)
  createTime = _messages.StringField(5)
  creator = _messages.StringField(6)
  finishTime = _messages.StringField(7)
  id = _messages.StringField(8)
  logsBucket = _messages.StringField(9)
  projectId = _messages.StringField(10)
  sourceProvenance = _messages.MessageField('Source', 11)
  startTime = _messages.StringField(12)
  triggerId = _messages.StringField(13)


class BuildSignature(_messages.Message):
  """Message encapsulating signature of the verified build

  Fields:
    publicKey: Public key of the builder which can be used to verify that
      related Findings are valid and unchanged. To verify the signature, place
      the contents of this field into a file (public.pem). The signature field
      is base64-decoded into its binary representation in signature.bin, and
      the provenance bytes from BuildDetails are base64-decoded into a binary
      representation in signed.bin. Openssl can then verify the signature:
      'openssl sha256 -verify public.pem -signature signature.bin signed.bin'
      This field can be used as a filter in list requests.
    signature: Signature of the related BuildProvenance, encoded in a base64
      string.
  """

  publicKey = _messages.StringField(1)
  signature = _messages.StringField(2)


class BuildType(_messages.Message):
  """Note holding the version of the provider's builder and the signature of
  the provenance message in linked BuildDetails.

  Fields:
    builderVersion: Version of the builder which produced this Note. This
      field can be used as a filter in list requests.
    signature: Signature of the build in Occurrences pointing to the Note
      containing this BuilderDetails.
  """

  builderVersion = _messages.StringField(1)
  signature = _messages.MessageField('BuildSignature', 2)


class CloudAuditOptions(_messages.Message):
  """Write a Cloud Audit log"""


class Command(_messages.Message):
  """Command describes a step performed as part of the build pipeline.

  Fields:
    args: Command-line arguments used when executing this Command.
    dir: Working directory (relative to project source root) used when running
      this Command.
    env: Environment variables set before running this Command.
    id: Optional unique identifier for this Command, used in wait_for to
      reference this Command as a dependency.
    name: Name of the command, as presented on the command line, or if the
      command is packaged as a Docker container, as presented to `docker
      pull`.
    waitFor: The ID(s) of the Command(s) that this Command depends on.
  """

  args = _messages.StringField(1, repeated=True)
  dir = _messages.StringField(2)
  env = _messages.StringField(3, repeated=True)
  id = _messages.StringField(4)
  name = _messages.StringField(5)
  waitFor = _messages.StringField(6, repeated=True)


class Condition(_messages.Message):
  """A condition to be met.

  Enums:
    IamValueValuesEnum: Trusted attributes supplied by the IAM system.
    OpValueValuesEnum: An operator to apply the subject with.
    SysValueValuesEnum: Trusted attributes supplied by any service that owns
      resources and uses the IAM system for access control.

  Fields:
    iam: Trusted attributes supplied by the IAM system.
    op: An operator to apply the subject with.
    svc: Trusted attributes discharged by the service.
    sys: Trusted attributes supplied by any service that owns resources and
      uses the IAM system for access control.
    value: DEPRECATED. Use 'values' instead.
    values: The objects of the condition. This is mutually exclusive with
      'value'.
  """

  class IamValueValuesEnum(_messages.Enum):
    """Trusted attributes supplied by the IAM system.

    Values:
      NO_ATTR: Default non-attribute.
      AUTHORITY: Either principal or (if present) authority
      ATTRIBUTION: selector Always the original principal, but making clear
    """
    NO_ATTR = 0
    AUTHORITY = 1
    ATTRIBUTION = 2

  class OpValueValuesEnum(_messages.Enum):
    """An operator to apply the subject with.

    Values:
      NO_OP: Default no-op.
      EQUALS: DEPRECATED. Use IN instead.
      NOT_EQUALS: DEPRECATED. Use NOT_IN instead.
      IN: Set-inclusion check.
      NOT_IN: Set-exclusion check.
      DISCHARGED: Subject is discharged
    """
    NO_OP = 0
    EQUALS = 1
    NOT_EQUALS = 2
    IN = 3
    NOT_IN = 4
    DISCHARGED = 5

  class SysValueValuesEnum(_messages.Enum):
    """Trusted attributes supplied by any service that owns resources and uses
    the IAM system for access control.

    Values:
      NO_ATTR: Default non-attribute type
      REGION: Region of the resource
      SERVICE: Service name
      NAME: Resource name
      IP: IP address of the caller
    """
    NO_ATTR = 0
    REGION = 1
    SERVICE = 2
    NAME = 3
    IP = 4

  iam = _messages.EnumField('IamValueValuesEnum', 1)
  op = _messages.EnumField('OpValueValuesEnum', 2)
  svc = _messages.StringField(3)
  sys = _messages.EnumField('SysValueValuesEnum', 4)
  value = _messages.StringField(5)
  values = _messages.StringField(6, repeated=True)


class ContaineranalysisProjectsOccurrencesCreateRequest(_messages.Message):
  """A ContaineranalysisProjectsOccurrencesCreateRequest object.

  Fields:
    occurrence: A Occurrence resource to be passed as the request body.
    projectsId: Part of `name`. The name of the project.  Should be of the
      form "projects/{project_id}".
  """

  occurrence = _messages.MessageField('Occurrence', 1)
  projectsId = _messages.StringField(2, required=True)


class ContaineranalysisProjectsOccurrencesDeleteRequest(_messages.Message):
  """A ContaineranalysisProjectsOccurrencesDeleteRequest object.

  Fields:
    occurrencesId: Part of `name`. See documentation of `projectsId`.
    projectsId: Part of `name`. The name of the occurrence in the form
      "projects/{project_id}/occurrences/{occurrence_id}"
  """

  occurrencesId = _messages.StringField(1, required=True)
  projectsId = _messages.StringField(2, required=True)


class ContaineranalysisProjectsOccurrencesGetIamPolicyRequest(_messages.Message):
  """A ContaineranalysisProjectsOccurrencesGetIamPolicyRequest object.

  Fields:
    getIamPolicyRequest: A GetIamPolicyRequest resource to be passed as the
      request body.
    occurrencesId: Part of `resource`. See documentation of `projectsId`.
    projectsId: Part of `resource`. REQUIRED: The resource for which the
      policy is being requested. `resource` is usually specified as a path.
      For example, a Project resource is specified as `projects/{project}`.
  """

  getIamPolicyRequest = _messages.MessageField('GetIamPolicyRequest', 1)
  occurrencesId = _messages.StringField(2, required=True)
  projectsId = _messages.StringField(3, required=True)


class ContaineranalysisProjectsOccurrencesGetNotesRequest(_messages.Message):
  """A ContaineranalysisProjectsOccurrencesGetNotesRequest object.

  Fields:
    occurrencesId: Part of `name`. See documentation of `projectsId`.
    projectsId: Part of `name`. The name of the occurrence in the form
      "projects/{project_id}/occurrences/{occurrence_id}"
  """

  occurrencesId = _messages.StringField(1, required=True)
  projectsId = _messages.StringField(2, required=True)


class ContaineranalysisProjectsOccurrencesGetRequest(_messages.Message):
  """A ContaineranalysisProjectsOccurrencesGetRequest object.

  Fields:
    occurrencesId: Part of `name`. See documentation of `projectsId`.
    projectsId: Part of `name`. The name of the occurrence in the form
      "projects/{project_id}/occurrences/{occurrence_id}"
  """

  occurrencesId = _messages.StringField(1, required=True)
  projectsId = _messages.StringField(2, required=True)


class ContaineranalysisProjectsOccurrencesListRequest(_messages.Message):
  """A ContaineranalysisProjectsOccurrencesListRequest object.

  Fields:
    filter: The filter expression.
    pageSize: Number of notes to return in the list.
    pageToken: Token to provide to skip to a particular spot in the list.
    projectsId: Part of `name`. The name field will contain the projectId for
      example: "projects/{project_id}
  """

  filter = _messages.StringField(1)
  pageSize = _messages.IntegerField(2, variant=_messages.Variant.INT32)
  pageToken = _messages.StringField(3)
  projectsId = _messages.StringField(4, required=True)


class ContaineranalysisProjectsOccurrencesSetIamPolicyRequest(_messages.Message):
  """A ContaineranalysisProjectsOccurrencesSetIamPolicyRequest object.

  Fields:
    occurrencesId: Part of `resource`. See documentation of `projectsId`.
    projectsId: Part of `resource`. REQUIRED: The resource for which the
      policy is being specified. `resource` is usually specified as a path.
      For example, a Project resource is specified as `projects/{project}`.
    setIamPolicyRequest: A SetIamPolicyRequest resource to be passed as the
      request body.
  """

  occurrencesId = _messages.StringField(1, required=True)
  projectsId = _messages.StringField(2, required=True)
  setIamPolicyRequest = _messages.MessageField('SetIamPolicyRequest', 3)


class ContaineranalysisProjectsOccurrencesTestIamPermissionsRequest(_messages.Message):
  """A ContaineranalysisProjectsOccurrencesTestIamPermissionsRequest object.

  Fields:
    occurrencesId: Part of `resource`. See documentation of `projectsId`.
    projectsId: Part of `resource`. REQUIRED: The resource for which the
      policy detail is being requested. `resource` is usually specified as a
      path. For example, a Project resource is specified as
      `projects/{project}`.
    testIamPermissionsRequest: A TestIamPermissionsRequest resource to be
      passed as the request body.
  """

  occurrencesId = _messages.StringField(1, required=True)
  projectsId = _messages.StringField(2, required=True)
  testIamPermissionsRequest = _messages.MessageField('TestIamPermissionsRequest', 3)


class ContaineranalysisProjectsOccurrencesUpdateRequest(_messages.Message):
  """A ContaineranalysisProjectsOccurrencesUpdateRequest object.

  Fields:
    occurrence: A Occurrence resource to be passed as the request body.
    occurrencesId: Part of `name`. See documentation of `projectsId`.
    projectsId: Part of `name`. The name of the occurrence. Should be of the
      form "projects/{project_id}/occurrences/{occurrence_id}".
  """

  occurrence = _messages.MessageField('Occurrence', 1)
  occurrencesId = _messages.StringField(2, required=True)
  projectsId = _messages.StringField(3, required=True)


class ContaineranalysisProvidersNotesCreateRequest(_messages.Message):
  """A ContaineranalysisProvidersNotesCreateRequest object.

  Fields:
    note: A Note resource to be passed as the request body.
    noteId: The ID to use for this note.
    providersId: Part of `name`. The name of the project. Should be of the
      form "providers/{provider_id}".
  """

  note = _messages.MessageField('Note', 1)
  noteId = _messages.StringField(2)
  providersId = _messages.StringField(3, required=True)


class ContaineranalysisProvidersNotesDeleteRequest(_messages.Message):
  """A ContaineranalysisProvidersNotesDeleteRequest object.

  Fields:
    notesId: Part of `name`. See documentation of `providersId`.
    providersId: Part of `name`. The name of the note in the form
      "providers/{provider_id}/notes/{note_id}"
  """

  notesId = _messages.StringField(1, required=True)
  providersId = _messages.StringField(2, required=True)


class ContaineranalysisProvidersNotesGetIamPolicyRequest(_messages.Message):
  """A ContaineranalysisProvidersNotesGetIamPolicyRequest object.

  Fields:
    getIamPolicyRequest: A GetIamPolicyRequest resource to be passed as the
      request body.
    notesId: Part of `resource`. See documentation of `providersId`.
    providersId: Part of `resource`. REQUIRED: The resource for which the
      policy is being requested. `resource` is usually specified as a path.
      For example, a Project resource is specified as `projects/{project}`.
  """

  getIamPolicyRequest = _messages.MessageField('GetIamPolicyRequest', 1)
  notesId = _messages.StringField(2, required=True)
  providersId = _messages.StringField(3, required=True)


class ContaineranalysisProvidersNotesGetRequest(_messages.Message):
  """A ContaineranalysisProvidersNotesGetRequest object.

  Fields:
    notesId: Part of `name`. See documentation of `providersId`.
    providersId: Part of `name`. The name of the occurrence in the form
      "providers/{provider_id}/notes/{note_id}"
  """

  notesId = _messages.StringField(1, required=True)
  providersId = _messages.StringField(2, required=True)


class ContaineranalysisProvidersNotesListRequest(_messages.Message):
  """A ContaineranalysisProvidersNotesListRequest object.

  Fields:
    filter: The filter expression.
    pageSize: Number of notes to return in the list.
    pageToken: Token to provide to skip to a particular spot in the list.
    providersId: Part of `name`. The name field will contain the projectId for
      example: "providers/{provider_id}
  """

  filter = _messages.StringField(1)
  pageSize = _messages.IntegerField(2, variant=_messages.Variant.INT32)
  pageToken = _messages.StringField(3)
  providersId = _messages.StringField(4, required=True)


class ContaineranalysisProvidersNotesOccurrencesListRequest(_messages.Message):
  """A ContaineranalysisProvidersNotesOccurrencesListRequest object.

  Fields:
    filter: The filter expression.
    notesId: Part of `name`. See documentation of `providersId`.
    pageSize: Number of notes to return in the list.
    pageToken: Token to provide to skip to a particular spot in the list.
    providersId: Part of `name`. The name field will contain the note name for
      example:   "provider/{provider_id}/notes/{note_id}"
  """

  filter = _messages.StringField(1)
  notesId = _messages.StringField(2, required=True)
  pageSize = _messages.IntegerField(3, variant=_messages.Variant.INT32)
  pageToken = _messages.StringField(4)
  providersId = _messages.StringField(5, required=True)


class ContaineranalysisProvidersNotesSetIamPolicyRequest(_messages.Message):
  """A ContaineranalysisProvidersNotesSetIamPolicyRequest object.

  Fields:
    notesId: Part of `resource`. See documentation of `providersId`.
    providersId: Part of `resource`. REQUIRED: The resource for which the
      policy is being specified. `resource` is usually specified as a path.
      For example, a Project resource is specified as `projects/{project}`.
    setIamPolicyRequest: A SetIamPolicyRequest resource to be passed as the
      request body.
  """

  notesId = _messages.StringField(1, required=True)
  providersId = _messages.StringField(2, required=True)
  setIamPolicyRequest = _messages.MessageField('SetIamPolicyRequest', 3)


class ContaineranalysisProvidersNotesTestIamPermissionsRequest(_messages.Message):
  """A ContaineranalysisProvidersNotesTestIamPermissionsRequest object.

  Fields:
    notesId: Part of `resource`. See documentation of `providersId`.
    providersId: Part of `resource`. REQUIRED: The resource for which the
      policy detail is being requested. `resource` is usually specified as a
      path. For example, a Project resource is specified as
      `projects/{project}`.
    testIamPermissionsRequest: A TestIamPermissionsRequest resource to be
      passed as the request body.
  """

  notesId = _messages.StringField(1, required=True)
  providersId = _messages.StringField(2, required=True)
  testIamPermissionsRequest = _messages.MessageField('TestIamPermissionsRequest', 3)


class ContaineranalysisProvidersNotesUpdateRequest(_messages.Message):
  """A ContaineranalysisProvidersNotesUpdateRequest object.

  Fields:
    note: A Note resource to be passed as the request body.
    notesId: Part of `name`. See documentation of `providersId`.
    providersId: Part of `name`. The name of the note. Should be of the form
      "providers/{provider_id}/notes/{note_id}".
  """

  note = _messages.MessageField('Note', 1)
  notesId = _messages.StringField(2, required=True)
  providersId = _messages.StringField(3, required=True)


class CounterOptions(_messages.Message):
  """Options for counters

  Fields:
    field: The field value to attribute.
    metric: The metric to update.
  """

  field = _messages.StringField(1)
  metric = _messages.StringField(2)


class DataAccessOptions(_messages.Message):
  """Write a Data Access (Gin) log"""


class Detail(_messages.Message):
  """Identifies all occurences of this vulnerability in the package for a
  specific distro/location For example: glibc in cpe:/o:debian:debian_linux:8
  for versions 2.1 - 2.2

  Fields:
    cpeUri: The cpe_uri in [cpe format] (https://cpe.mitre.org/specification/)
      in which the vulnerability manifests.  Examples include distro or
      storage location for vulnerable jar. This field can be used as a filter
      in list requests.
    description: A vendor-specific description of this note.
    fixedLocation: The fix for this specific package version.
    maxAffectedVersion: The max version of the package in which the
      vulnerability exists. This field can be used as a filter in list
      requests.
    minAffectedVersion: The min version of the package in which the
      vulnerability exists. This field can be used as a filter in list
      requests.
    package: The name of the package where the vulnerability was found. This
      field can be used as a filter in list requests.
    severity: The severity (eg: distro assigned severity) for this
      vulnerability. This field can be used as a filter in list requests.
  """

  cpeUri = _messages.StringField(1)
  description = _messages.StringField(2)
  fixedLocation = _messages.MessageField('VulnerabilityLocation', 3)
  maxAffectedVersion = _messages.MessageField('Version', 4)
  minAffectedVersion = _messages.MessageField('Version', 5)
  package = _messages.StringField(6)
  severity = _messages.StringField(7)


class Empty(_messages.Message):
  """A generic empty message that you can re-use to avoid defining duplicated
  empty messages in your APIs. A typical example is to use it as the request
  or the response type of an API method. For instance:      service Foo {
  rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);     }  The
  JSON representation for `Empty` is empty JSON object `{}`.
  """



class FileHashes(_messages.Message):
  """Container message for hashes of byte content of files, used in Source
  messages to verify integrity of source input to the build.

  Fields:
    fileHash: Collection of file hashes.
  """

  fileHash = _messages.MessageField('Hash', 1, repeated=True)


class GetIamPolicyRequest(_messages.Message):
  """Request message for `GetIamPolicy` method."""


class Hash(_messages.Message):
  """Container message for hash values.

  Enums:
    TypeValueValuesEnum: The type of hash that was performed.

  Fields:
    type: The type of hash that was performed.
    value: The hash value.
  """

  class TypeValueValuesEnum(_messages.Enum):
    """The type of hash that was performed.

    Values:
      NONE: No hash requested.
      SHA256: A sha256 hash.
    """
    NONE = 0
    SHA256 = 1

  type = _messages.EnumField('TypeValueValuesEnum', 1)
  value = _messages.BytesField(2)


class ListNoteOccurrencesResponse(_messages.Message):
  """Response including listed occurrences for a note.

  Fields:
    nextPageToken: Token to receive the next page of notes.
    occurrences: The names of the Occurrences linked to the specified Note for
      example:   "projects/{project_id}/occurrences/{occurrence_id}"
  """

  nextPageToken = _messages.StringField(1)
  occurrences = _messages.StringField(2, repeated=True)


class ListNotesResponse(_messages.Message):
  """Response including listed notes.

  Fields:
    nextPageToken: The next pagination token in the List response. It should
      be used as page_token for the following request. An empty value means no
      more result.
    notes: The occurrences requested
  """

  nextPageToken = _messages.StringField(1)
  notes = _messages.MessageField('Note', 2, repeated=True)


class ListOccurrencesResponse(_messages.Message):
  """Response including listed occurrences.

  Fields:
    nextPageToken: The next pagination token in the List response. It should
      be used as page_token for the following request. An empty value means no
      more result.
    occurrences: The occurrences requested
  """

  nextPageToken = _messages.StringField(1)
  occurrences = _messages.MessageField('Occurrence', 2, repeated=True)


class LogConfig(_messages.Message):
  """Specifies what kind of log the caller must write Increment a streamz
  counter with the specified metric and field names.  Metric names should
  start with a '/', generally be lowercase-only, and end in "_count". Field
  names should not contain an initial slash. The actual exported metric names
  will have "/iam/policy" prepended.  Field names correspond to IAM request
  parameters and field values are their respective values.  At present the
  only supported field names are    - "iam_principal", corresponding to
  IAMContext.principal;    - "" (empty string), resulting in one aggretated
  counter with no field.  Examples:   counter { metric: "/debug_access_count"
  field: "iam_principal" }   ==> increment counter
  /iam/policy/backend_debug_access_count
  {iam_principal=[value of IAMContext.principal]}  At this time we do not
  support: * multiple field names (though this may be supported in the future)
  * decrementing the counter * incrementing it by anything other than 1

  Fields:
    cloudAudit: Cloud audit options.
    counter: Counter options.
    dataAccess: Data access options.
  """

  cloudAudit = _messages.MessageField('CloudAuditOptions', 1)
  counter = _messages.MessageField('CounterOptions', 2)
  dataAccess = _messages.MessageField('DataAccessOptions', 3)


class Note(_messages.Message):
  """Note provides a detailed description of a note using information from the
  provider of the note.

  Enums:
    KindValueValuesEnum: This explicitly denotes which kind of note is
      specified. This field can be used as a filter in list requests.
      @OutputOnly

  Fields:
    buildType: Build provenance type for a verifiable build.
    createTime: The time this note was created. This field can be used as a
      filter in list requests. @OutputOnly
    expirationTime: Time of expiration for this Note, null if Note currently
      does not expire.
    kind: This explicitly denotes which kind of note is specified. This field
      can be used as a filter in list requests. @OutputOnly
    longDescription: A detailed description of this note
    name: The name of the note in the form
      "providers/{provider_id}/notes/{note_id}"
    relatedUrl: Urls associated with this note
    shortDescription: A one sentence description of this note
    updateTime: The time this note was last updated. This field can be used as
      a filter in list requests. @OutputOnly
    vulnerabilityType: A package vulnerability type of note.
  """

  class KindValueValuesEnum(_messages.Enum):
    """This explicitly denotes which kind of note is specified. This field can
    be used as a filter in list requests. @OutputOnly

    Values:
      UNKNOWN: Unknown
      PACKAGE_VULNERABILITY: The note and occurrence represent a package
        vulnerability.
      BUILD_DETAILS: The note and occurrence  assert build provenance.
    """
    UNKNOWN = 0
    PACKAGE_VULNERABILITY = 1
    BUILD_DETAILS = 2

  buildType = _messages.MessageField('BuildType', 1)
  createTime = _messages.StringField(2)
  expirationTime = _messages.StringField(3)
  kind = _messages.EnumField('KindValueValuesEnum', 4)
  longDescription = _messages.StringField(5)
  name = _messages.StringField(6)
  relatedUrl = _messages.MessageField('RelatedUrl', 7, repeated=True)
  shortDescription = _messages.StringField(8)
  updateTime = _messages.StringField(9)
  vulnerabilityType = _messages.MessageField('VulnerabilityType', 10)


class Occurrence(_messages.Message):
  """Occurrence includes information about analysis occurrences for an image.
  ``

  Enums:
    KindValueValuesEnum: This explicitly denotes which of the occurrence
      details is specified. This field can be used as a filter in list
      requests. @OutputOnly

  Fields:
    buildDetails: Build details for a verifiable build.
    createTime: The time this occurrence was created. This field can be used
      as a filter in list requests. @OutputOnly
    kind: This explicitly denotes which of the occurrence details is
      specified. This field can be used as a filter in list requests.
      @OutputOnly
    name: The name of the occurrence in the form
      "projects/{project_id}/occurrences/{occurrence_id}" @OutputOnly
    noteName: An analysis note associated with this image, in the form
      "providers/{provider_id}/notes/{note_id}" This field can be used as a
      filter in list requests.
    remediation: A description of actions that can be taken to remedy the note
    resourceUrl: The unique url of the image or container for which the
      occurrence applies. Example: https://gcr.io/project/image@sha256:foo
      This field can be used as a filter in list requests.
    updateTime: The time this occurrence was last updated. This field can be
      used as a filter in list requests. @OutputOnly
    vulnerabilityDetails: Details of a security vulnerability note.
  """

  class KindValueValuesEnum(_messages.Enum):
    """This explicitly denotes which of the occurrence details is specified.
    This field can be used as a filter in list requests. @OutputOnly

    Values:
      UNKNOWN: Unknown
      PACKAGE_VULNERABILITY: The note and occurrence represent a package
        vulnerability.
      BUILD_DETAILS: The note and occurrence  assert build provenance.
    """
    UNKNOWN = 0
    PACKAGE_VULNERABILITY = 1
    BUILD_DETAILS = 2

  buildDetails = _messages.MessageField('BuildDetails', 1)
  createTime = _messages.StringField(2)
  kind = _messages.EnumField('KindValueValuesEnum', 3)
  name = _messages.StringField(4)
  noteName = _messages.StringField(5)
  remediation = _messages.StringField(6)
  resourceUrl = _messages.StringField(7)
  updateTime = _messages.StringField(8)
  vulnerabilityDetails = _messages.MessageField('VulnerabilityDetails', 9)


class Policy(_messages.Message):
  """Defines an Identity and Access Management (IAM) policy. It is used to
  specify access control policies for Cloud Platform resources.   A `Policy`
  consists of a list of `bindings`. A `Binding` binds a list of `members` to a
  `role`, where the members can be user accounts, Google groups, Google
  domains, and service accounts. A `role` is a named list of permissions
  defined by IAM.  **Example**      {       "bindings": [         {
  "role": "roles/owner",           "members": [
  "user:mike@example.com",             "group:admins@example.com",
  "domain:google.com",             "serviceAccount:my-other-
  app@appspot.gserviceaccount.com",           ]         },         {
  "role": "roles/viewer",           "members": ["user:sean@example.com"]
  }       ]     }  For a description of IAM and its features, see the [IAM
  developer's guide](https://cloud.google.com/iam).

  Fields:
    auditConfigs: Specifies audit logging configs for "data access". "data
      access": generally refers to data reads/writes and admin reads. "admin
      activity": generally refers to admin writes.  Note: `AuditConfig`
      doesn't apply to "admin activity", which always enables audit logging.
    bindings: Associates a list of `members` to a `role`. Multiple `bindings`
      must not be specified for the same `role`. `bindings` with no members
      will result in an error.
    etag: `etag` is used for optimistic concurrency control as a way to help
      prevent simultaneous updates of a policy from overwriting each other. It
      is strongly suggested that systems make use of the `etag` in the read-
      modify-write cycle to perform policy updates in order to avoid race
      conditions: An `etag` is returned in the response to `getIamPolicy`, and
      systems are expected to put that etag in the request to `setIamPolicy`
      to ensure that their change will be applied to the same version of the
      policy.  If no `etag` is provided in the call to `setIamPolicy`, then
      the existing policy is overwritten blindly.
    iamOwned: A boolean attribute.
    rules: If more than one rule is specified, the rules are applied in the
      following manner: - All matching LOG rules are always applied. - If any
      DENY/DENY_WITH_LOG rule matches, permission is denied.   Logging will be
      applied if one or more matching rule requires logging. - Otherwise, if
      any ALLOW/ALLOW_WITH_LOG rule matches, permission is   granted.
      Logging will be applied if one or more matching rule requires logging. -
      Otherwise, if no rule applies, permission is denied.
    version: Version of the `Policy`. The default version is 0.
  """

  auditConfigs = _messages.MessageField('AuditConfig', 1, repeated=True)
  bindings = _messages.MessageField('Binding', 2, repeated=True)
  etag = _messages.BytesField(3)
  iamOwned = _messages.BooleanField(4)
  rules = _messages.MessageField('Rule', 5, repeated=True)
  version = _messages.IntegerField(6, variant=_messages.Variant.INT32)


class RelatedUrl(_messages.Message):
  """Metadata for any related url information

  Fields:
    label: Label to describe usage of the url
    url: Specific url to associate with the note
  """

  label = _messages.StringField(1)
  url = _messages.StringField(2)


class RepoSource(_messages.Message):
  """RepoSource describes the location of the source in a Google Cloud Source
  Repository.

  Fields:
    branchName: Name of the branch to build.
    commitSha: Explicit commit SHA to build.
    projectId: ID of the project that owns the repo.
    repoName: Name of the repo.
    tagName: Name of the tag to build.
  """

  branchName = _messages.StringField(1)
  commitSha = _messages.StringField(2)
  projectId = _messages.StringField(3)
  repoName = _messages.StringField(4)
  tagName = _messages.StringField(5)


class Rule(_messages.Message):
  """A rule to be applied in a Policy.

  Enums:
    ActionValueValuesEnum: Required

  Fields:
    action: Required
    conditions: Additional restrictions that must be met
    description: Human-readable description of the rule.
    in_: If one or more 'in' clauses are specified, the rule matches if the
      PRINCIPAL/AUTHORITY_SELECTOR is in at least one of these entries.
    logConfig: The config returned to callers of tech.iam.IAM.CheckPolicy for
      any entries that match the LOG action.
    notIn: If one or more 'not_in' clauses are specified, the rule matches if
      the PRINCIPAL/AUTHORITY_SELECTOR is in none of the entries. The format
      for in and not_in entries is the same as for members in a Binding (see
      google/iam/v1/policy.proto).
    permissions: A permission is a string of form '<service>.<resource
      type>.<verb>' (e.g., 'storage.buckets.list'). A value of '*' matches all
      permissions, and a verb part of '*' (e.g., 'storage.buckets.*') matches
      all verbs.
  """

  class ActionValueValuesEnum(_messages.Enum):
    """Required

    Values:
      NO_ACTION: Default no action.
      ALLOW: Matching 'Entries' grant access.
      ALLOW_WITH_LOG: Matching 'Entries' grant access and the caller promises
        to log the request per the returned log_configs.
      DENY: Matching 'Entries' deny access.
      DENY_WITH_LOG: Matching 'Entries' deny access and the caller promises to
        log the request per the returned log_configs.
      LOG: Matching 'Entries' tell IAM.Check callers to generate logs.
    """
    NO_ACTION = 0
    ALLOW = 1
    ALLOW_WITH_LOG = 2
    DENY = 3
    DENY_WITH_LOG = 4
    LOG = 5

  action = _messages.EnumField('ActionValueValuesEnum', 1)
  conditions = _messages.MessageField('Condition', 2, repeated=True)
  description = _messages.StringField(3)
  in_ = _messages.StringField(4, repeated=True)
  logConfig = _messages.MessageField('LogConfig', 5, repeated=True)
  notIn = _messages.StringField(6, repeated=True)
  permissions = _messages.StringField(7, repeated=True)


class SetIamPolicyRequest(_messages.Message):
  """Request message for `SetIamPolicy` method.

  Fields:
    policy: REQUIRED: The complete policy to be applied to the `resource`. The
      size of the policy is limited to a few 10s of KB. An empty policy is a
      valid policy but certain Cloud Platform services (such as Projects)
      might reject them.
  """

  policy = _messages.MessageField('Policy', 1)


class Source(_messages.Message):
  """Source describes the location of the source used for the build.

  Messages:
    FileHashesValue: Hash(es) of the build source, which can be used to verify
      that the original source integrity was maintained in the build.  The
      keys to this map are file paths used as build source and the values
      contain the hash values for those files.  If the build source came in a
      single package such as a gzipped tarfile (.tar.gz), the FileHash will be
      for the single path to that file.

  Fields:
    fileHashes: Hash(es) of the build source, which can be used to verify that
      the original source integrity was maintained in the build.  The keys to
      this map are file paths used as build source and the values contain the
      hash values for those files.  If the build source came in a single
      package such as a gzipped tarfile (.tar.gz), the FileHash will be for
      the single path to that file.
    repoSource: If provided, get source from this location in a Cloud Repo.
    storageSource: If provided, get the source from this location in in Google
      Cloud Storage.
  """

  @encoding.MapUnrecognizedFields('additionalProperties')
  class FileHashesValue(_messages.Message):
    """Hash(es) of the build source, which can be used to verify that the
    original source integrity was maintained in the build.  The keys to this
    map are file paths used as build source and the values contain the hash
    values for those files.  If the build source came in a single package such
    as a gzipped tarfile (.tar.gz), the FileHash will be for the single path
    to that file.

    Messages:
      AdditionalProperty: An additional property for a FileHashesValue object.

    Fields:
      additionalProperties: Additional properties of type FileHashesValue
    """

    class AdditionalProperty(_messages.Message):
      """An additional property for a FileHashesValue object.

      Fields:
        key: Name of the additional property.
        value: A FileHashes attribute.
      """

      key = _messages.StringField(1)
      value = _messages.MessageField('FileHashes', 2)

    additionalProperties = _messages.MessageField('AdditionalProperty', 1, repeated=True)

  fileHashes = _messages.MessageField('FileHashesValue', 1)
  repoSource = _messages.MessageField('RepoSource', 2)
  storageSource = _messages.MessageField('StorageSource', 3)


class StandardQueryParameters(_messages.Message):
  """Query parameters accepted by all methods.

  Enums:
    FXgafvValueValuesEnum: V1 error format.
    AltValueValuesEnum: Data format for response.

  Fields:
    f__xgafv: V1 error format.
    access_token: OAuth access token.
    alt: Data format for response.
    bearer_token: OAuth bearer token.
    callback: JSONP
    fields: Selector specifying which fields to include in a partial response.
    key: API key. Your API key identifies your project and provides you with
      API access, quota, and reports. Required unless you provide an OAuth 2.0
      token.
    oauth_token: OAuth 2.0 token for the current user.
    pp: Pretty-print response.
    prettyPrint: Returns response with indentations and line breaks.
    quotaUser: Available to use for quota purposes for server-side
      applications. Can be any arbitrary string assigned to a user, but should
      not exceed 40 characters.
    trace: A tracing token of the form "token:<tokenid>" to include in api
      requests.
    uploadType: Legacy upload protocol for media (e.g. "media", "multipart").
    upload_protocol: Upload protocol for media (e.g. "raw", "multipart").
  """

  class AltValueValuesEnum(_messages.Enum):
    """Data format for response.

    Values:
      json: Responses with Content-Type of application/json
      media: Media download with context-dependent Content-Type
      proto: Responses with Content-Type of application/x-protobuf
    """
    json = 0
    media = 1
    proto = 2

  class FXgafvValueValuesEnum(_messages.Enum):
    """V1 error format.

    Values:
      _1: v1 error format
      _2: v2 error format
    """
    _1 = 0
    _2 = 1

  f__xgafv = _messages.EnumField('FXgafvValueValuesEnum', 1)
  access_token = _messages.StringField(2)
  alt = _messages.EnumField('AltValueValuesEnum', 3, default=u'json')
  bearer_token = _messages.StringField(4)
  callback = _messages.StringField(5)
  fields = _messages.StringField(6)
  key = _messages.StringField(7)
  oauth_token = _messages.StringField(8)
  pp = _messages.BooleanField(9, default=True)
  prettyPrint = _messages.BooleanField(10, default=True)
  quotaUser = _messages.StringField(11)
  trace = _messages.StringField(12)
  uploadType = _messages.StringField(13)
  upload_protocol = _messages.StringField(14)


class StorageSource(_messages.Message):
  """StorageSource describes the location of the source in an archive file in
  Google Cloud Storage.

  Fields:
    bucket: Google Cloud Storage bucket containing source (see [Bucket Name
      Requirements] (https://cloud.google.com/storage/docs/bucket-
      naming#requirements)).
    generation: Google Cloud Storage generation for the object.
    object: Google Cloud Storage object containing source.
  """

  bucket = _messages.StringField(1)
  generation = _messages.IntegerField(2)
  object = _messages.StringField(3)


class TestIamPermissionsRequest(_messages.Message):
  """Request message for `TestIamPermissions` method.

  Fields:
    permissions: The set of permissions to check for the `resource`.
      Permissions with wildcards (such as '*' or 'storage.*') are not allowed.
      For more information see [IAM
      Overview](https://cloud.google.com/iam/docs/overview#permissions).
  """

  permissions = _messages.StringField(1, repeated=True)


class TestIamPermissionsResponse(_messages.Message):
  """Response message for `TestIamPermissions` method.

  Fields:
    permissions: A subset of `TestPermissionsRequest.permissions` that the
      caller is allowed.
  """

  permissions = _messages.StringField(1, repeated=True)


class Version(_messages.Message):
  """Version contains structured information about the version of the package.
  For a discussion of this in Debian/Ubuntu:
  http://serverfault.com/questions/604541/debian-packages-version-convention
  For a discussion of this in Redhat/Fedora/Centos:
  http://blog.jasonantman.com/2014/07/how-yum-and-rpm-compare-versions/

  Fields:
    epoch: Used to correct mistakes in the version numbering scheme.
    name: The main part of the version name.
    revision: The iteration of the package build from the above version.
  """

  epoch = _messages.IntegerField(1, variant=_messages.Variant.INT32)
  name = _messages.StringField(2)
  revision = _messages.StringField(3)


class VulnerabilityDetails(_messages.Message):
  """Used by Occurrence to point to where the vulnerability exists and how to
  fix it.

  Enums:
    SeverityValueValuesEnum: The provider assigned Severity of the
      vulnerability. This field can be used as a filter in list requests.
      @OutputOnly

  Fields:
    affectedLocation: The location of the vulnerability.
    cvssScore: The CVSS score of this vulnerability. This field can be used as
      a filter in list requests. @OutputOnly
    fixedLocation: The location of the available fix for vulnerability.
    severity: The provider assigned Severity of the vulnerability. This field
      can be used as a filter in list requests. @OutputOnly
    type: The type of package; whether native or non native(ruby gems, node.js
      packages etc) This field can be used as a filter in list requests.
  """

  class SeverityValueValuesEnum(_messages.Enum):
    """The provider assigned Severity of the vulnerability. This field can be
    used as a filter in list requests. @OutputOnly

    Values:
      UNKNOWN: Unknown Impact
      MINIMAL: Minimal Impact
      LOW: Low Impact
      MEDIUM: Medium Impact
      HIGH: High Impact
      CRITICAL: Critical Impact
    """
    UNKNOWN = 0
    MINIMAL = 1
    LOW = 2
    MEDIUM = 3
    HIGH = 4
    CRITICAL = 5

  affectedLocation = _messages.MessageField('VulnerabilityLocation', 1)
  cvssScore = _messages.FloatField(2, variant=_messages.Variant.FLOAT)
  fixedLocation = _messages.MessageField('VulnerabilityLocation', 3)
  severity = _messages.EnumField('SeverityValueValuesEnum', 4)
  type = _messages.StringField(5)


class VulnerabilityLocation(_messages.Message):
  """The location of the vulnerability

  Fields:
    cpeUri: The cpe_uri in [cpe format] (https://cpe.mitre.org/specification/)
      format. Examples include distro or storage location for vulnerable jar.
      This field can be used as a filter in list requests.
    package: The package being described. This field can be used as a filter
      in list requests.
    version: The version of the package being described. This field can be
      used as a filter in list requests.
  """

  cpeUri = _messages.StringField(1)
  package = _messages.StringField(2)
  version = _messages.MessageField('Version', 3)


class VulnerabilityType(_messages.Message):
  """VulnerabilityType provides metadata about a security vulnerability.

  Enums:
    SeverityValueValuesEnum: Provider assigned impact of the vulnerability
      This field can be used as a filter in list requests.

  Fields:
    cvssScore: The CVSS score for this Vulnerability. This field can be used
      as a filter in list requests.
    details: All information about the package to specifically identify this
      vulnerability. One entry per (version range and cpe_uri) the package
      vulnerability has manifested in.
    severity: Provider assigned impact of the vulnerability This field can be
      used as a filter in list requests.
  """

  class SeverityValueValuesEnum(_messages.Enum):
    """Provider assigned impact of the vulnerability This field can be used as
    a filter in list requests.

    Values:
      UNKNOWN: Unknown Impact
      MINIMAL: Minimal Impact
      LOW: Low Impact
      MEDIUM: Medium Impact
      HIGH: High Impact
      CRITICAL: Critical Impact
    """
    UNKNOWN = 0
    MINIMAL = 1
    LOW = 2
    MEDIUM = 3
    HIGH = 4
    CRITICAL = 5

  cvssScore = _messages.FloatField(1, variant=_messages.Variant.FLOAT)
  details = _messages.MessageField('Detail', 2, repeated=True)
  severity = _messages.EnumField('SeverityValueValuesEnum', 3)


encoding.AddCustomJsonFieldMapping(
    Rule, 'in_', 'in',
    package=u'containeranalysis')
encoding.AddCustomJsonFieldMapping(
    StandardQueryParameters, 'f__xgafv', '$.xgafv',
    package=u'containeranalysis')
encoding.AddCustomJsonEnumMapping(
    StandardQueryParameters.FXgafvValueValuesEnum, '_1', '1',
    package=u'containeranalysis')
encoding.AddCustomJsonEnumMapping(
    StandardQueryParameters.FXgafvValueValuesEnum, '_2', '2',
    package=u'containeranalysis')
